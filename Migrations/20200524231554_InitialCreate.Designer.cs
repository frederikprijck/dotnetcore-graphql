// <auto-generated />
using System;
using Codacious.GraphQL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Codacious.GraphQL.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20200524231554_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Codacious.GraphQL.Entities.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Alper Ebicoglu",
                            RegisterDate = new DateTime(2020, 5, 15, 1, 15, 53, 845, DateTimeKind.Local).AddTicks(3489)
                        },
                        new
                        {
                            Id = 2,
                            Name = "George Michael",
                            RegisterDate = new DateTime(2020, 5, 20, 1, 15, 53, 849, DateTimeKind.Local).AddTicks(8561)
                        },
                        new
                        {
                            Id = 3,
                            Name = "Daft Punk",
                            RegisterDate = new DateTime(2020, 5, 24, 1, 15, 53, 849, DateTimeKind.Local).AddTicks(8754)
                        });
                });

            modelBuilder.Entity("Codacious.GraphQL.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckinDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckoutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckinDate = new DateTime(2020, 5, 23, 1, 15, 53, 850, DateTimeKind.Local).AddTicks(2459),
                            CheckoutDate = new DateTime(2020, 5, 28, 1, 15, 53, 850, DateTimeKind.Local).AddTicks(2478),
                            GuestId = 1,
                            RoomId = 3
                        },
                        new
                        {
                            Id = 2,
                            CheckinDate = new DateTime(2020, 5, 24, 1, 15, 53, 850, DateTimeKind.Local).AddTicks(5720),
                            CheckoutDate = new DateTime(2020, 5, 29, 1, 15, 53, 850, DateTimeKind.Local).AddTicks(5738),
                            GuestId = 2,
                            RoomId = 4
                        });
                });

            modelBuilder.Entity("Codacious.GraphQL.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HasWifi")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HasWifi = false,
                            Name = "yellow-room",
                            Number = 101,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            HasWifi = false,
                            Name = "blue-room",
                            Number = 102,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            HasWifi = false,
                            Name = "white-room",
                            Number = 103,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            HasWifi = false,
                            Name = "black-room",
                            Number = 104,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            HasWifi = true,
                            Name = "wifi-room",
                            Number = 105,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Codacious.GraphQL.Entities.Reservation", b =>
                {
                    b.HasOne("Codacious.GraphQL.Entities.Guest", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Codacious.GraphQL.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
